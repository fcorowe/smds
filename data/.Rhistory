legend.bg.color = "white",
legend.bg.alpha = 1)
head(la_shp_simple)
la_shp_simple %>% filter(ctry_nm=="E" | ctry_nm=="W") %>%
tm_shape(la_shp_simple) +
tm_fill(col = "netflows", style = "order", palette = viridis(256), title = "Net migration") +
tm_borders(lwd = 0) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
legend.position = c("right","top"),
legend.bg.color = "white",
legend.bg.alpha = 1)
la_shp_simple <- la_shp_simple %>% filter(ctry_nm=="E" | ctry_nm=="W")
tm_shape(la_shp_simple) +
tm_fill(col = "netflows", style = "order", palette = viridis(256), title = "Net migration") +
tm_borders(lwd = 0) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
legend.position = c("right","top"),
legend.bg.color = "white",
legend.bg.alpha = 1)
"fortify
""
?fortify
""
?fortify
head(la_shp_simple)
la_shp_simple <- la_shp_simple %>% filter(ctry_nm=="E" | ctry_nm=="W")
netm <- tm_shape(la_shp_simple) +
tm_fill(col = "netflows", style = "order", palette = viridis(256), title = "Net migration") +
tm_borders(lwd = 0) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
legend.position = c("right","top"),
legend.bg.color = "white",
legend.bg.alpha = 1)
outm <- tm_shape(la_shp_simple) +
tm_fill(col = "outflows", style = "order", palette = viridis(256), title = "Out-migration") +
tm_borders(lwd = 0) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
legend.position = c("right","top"),
legend.bg.color = "white",
legend.bg.alpha = 1)
inm <- tm_shape(la_shp_simple) +
tm_fill(col = "inflows", style = "order", palette = viridis(256), title = "In-migration") +
tm_borders(lwd = 0) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
legend.position = c("right","top"),
legend.bg.color = "white",
legend.bg.alpha = 1)
tmap_arrange(netm, outm, inm)
tm_shape(la_shp_simple) +
tm_fill(col = "netflows", style = "order", palette = viridis(256), title = "Net migration") +
tm_borders(lwd = 0) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
legend.hist = TRUE,
legend.position = c("right","top"),
legend.bg.color = "white",
legend.bg.alpha = 1)
tm_shape(la_shp_simple) +
tm_fill(col = "netflows", style = "order", palette = viridis(256), title = "Net migration") +
tm_borders(lwd = 0) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
legend.position = c("right","top"),
legend.bg.color = "white",
legend.bg.alpha = 1)
la_shp_simple %>% filter(ctry_nm=="E" | ctry_nm=="W")
netm <- tm_shape(la_shp_simple) +
tm_fill(col = "netflows", style = "kmeans", palette = viridis(256), title = "Net migration") +
tm_borders(lwd = 0) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
legend.position = c("right","top"),
legend.bg.color = "white",
legend.bg.alpha = 1)
tm_shape(la_shp_simple) +
tm_fill(col = "netflows", style = "kmeans", palette = viridis, title = "Net migration") +
tm_borders(lwd = 0) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
legend.position = c("right","top"),
legend.bg.color = "white",
legend.bg.alpha = 1)
tm_shape(la_shp_simple) +
tm_fill(col = "netflows", style = "kmeans", palette = viridis(256), title = "Net migration") +
tm_borders(lwd = 0) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
legend.position = c("right","top"),
legend.bg.color = "white",
legend.bg.alpha = 1)
tm_shape(la_shp_simple) +
tm_fill(col = "netflows", style = "kmeans", palette = viridis(256), title = "Net migration") +
tm_borders(lwd = 0) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
legend.hist = TRUE,
legend.position = c("right","top"),
legend.bg.color = "white",
legend.bg.alpha = 1)
tm_shape(la_shp_simple) +
tm_fill(col = "netflows", style = "kmeans", palette = viridis(256), title = "Net migration", legend.hist = TRUE) +
tm_borders(lwd = 0) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
legend.position = c("right","top"),
legend.bg.color = "white",
legend.bg.alpha = 1)
tm_shape(la_shp_simple) +
tm_fill(col = "netflows", style = "kmeans", palette = viridis(256), title = "Net migration", legend.hist = TRUE) +
tm_borders(lwd = 0) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
legend.position = c("right","top"),
legend.bg.color = "white",
legend.outside = TRUE,
legend.bg.alpha = 1)
tm_shape(la_shp_simple) +
tm_fill(col = "netflows", style = "kmeans", palette = viridis(256), title = "Net migration", legend.hist = TRUE) +
tm_borders(lwd = 0) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
#legend.position = c("right","top"),
legend.bg.color = "white",
legend.outside = TRUE,
legend.bg.alpha = 1)
tm_shape(la_shp_simple) +
tm_fill(col = "netflows", style = "kmeans", palette = RdBu, title = "Net migration", legend.hist = TRUE) +
tm_borders(lwd = 0) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
#legend.position = c("right","top"),
legend.bg.color = "white",
legend.outside = TRUE,
legend.bg.alpha = 1)
tm_shape(la_shp_simple) +
tm_fill(col = "netflows", style = "kmeans", palette = "RdBu", title = "Net migration", legend.hist = TRUE) +
tm_borders(lwd = 0) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
#legend.position = c("right","top"),
legend.bg.color = "white",
legend.outside = TRUE,
legend.bg.alpha = 1)
tm_shape(la_shp_simple) +
tm_fill(col = "netflows", style = "kmeans", palette = "RdBu", title = "Net migration", legend.hist = TRUE) +
tm_borders(lwd = 0.1) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
#legend.position = c("right","top"),
legend.bg.color = "white",
legend.outside = TRUE,
legend.bg.alpha = 1)
tm_shape(la_shp_simple) +
tm_fill(col = "netflows", style = "kmeans", palette = "RdBu", title = "Net migration", legend.hist = TRUE) +
tm_borders(lwd = 0.2) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
#legend.position = c("right","top"),
legend.bg.color = "white",
legend.outside = TRUE,
legend.bg.alpha = 1)
tm_shape(la_shp_simple) +
tm_fill(col = "netflows",
style = "kmeans",
palette = rainbow(256),
title = "Net migration",
legend.hist = TRUE) +
tm_borders(lwd = 0.2) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
#legend.position = c("right","top"),
legend.bg.color = "white",
legend.outside = TRUE,
legend.bg.alpha = 1)
library(RColorBrewer)
tm_shape(la_shp_simple) +
tm_fill(col = "netflows",
style = "kmeans",
palette = "RdBu",
title = "Net migration",
legend.hist = TRUE) +
tm_borders(lwd = 0.2) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
#legend.position = c("right","top"),
legend.bg.color = "white",
legend.outside = TRUE,
legend.bg.alpha = 1)
display.brewer.all(colorblindFriendly = TRUE)
tm_shape(la_shp_simple) +
tm_fill(col = "netflows",
style = "kmeans",
palette = scale_color_grafify,
title = "Net migration",
legend.hist = TRUE) +
tm_borders(lwd = 0.2) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
#legend.position = c("right","top"),
legend.bg.color = "white",
legend.outside = TRUE,
legend.bg.alpha = 1)
library(grafify )
library(grafify)
install.packages("grafify ")
install.packages("grafify")
library("grafify")
sessionInfo()
tm_shape(la_shp_simple) +
tm_fill(col = "netflows",
style = "kmeans",
palette = magma(256),
title = "Net migration",
legend.hist = TRUE) +
tm_borders(lwd = 0.2) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
#legend.position = c("right","top"),
legend.bg.color = "white",
legend.outside = TRUE,
legend.bg.alpha = 1)
tm_shape(la_shp_simple) +
tm_fill(col = "netflows",
style = "kmeans",
palette = inferno(256),
title = "Net migration",
legend.hist = TRUE) +
tm_borders(lwd = 0.2) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
#legend.position = c("right","top"),
legend.bg.color = "white",
legend.outside = TRUE,
legend.bg.alpha = 1)
tm_shape(la_shp_simple) +
tm_fill(col = "netflows",
style = "kmeans",
palette = viridis(256),
title = "Net migration",
legend.hist = TRUE) +
tm_borders(lwd = 0.2) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
#legend.position = c("right","top"),
legend.bg.color = "white",
legend.outside = TRUE,
legend.bg.alpha = 1)
tm_shape(la_shp_simple) +
tm_fill(col = "netflows",
style = "order",
palette = viridis(256),
title = "Net migration",
legend.hist = TRUE) +
tm_borders(lwd = 0.2) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
#legend.position = c("right","top"),
legend.bg.color = "white",
legend.outside = TRUE,
legend.bg.alpha = 1)
tm_shape(la_shp_simple) +
tm_fill(col = "netflows",
style = "equal",
palette = viridis(256),
title = "Net migration",
legend.hist = TRUE) +
tm_borders(lwd = 0.2) +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
#legend.position = c("right","top"),
legend.bg.color = "white",
legend.outside = TRUE,
legend.bg.alpha = 1)
library(tidyverse)
library(viridis)
library(viridisLite)
df <- readRDS("/Users/Franciscorowe 1/Dropbox/Francisco/Research/in_progress/mig_covid_spain/data/matrix.rds")
df <- readRDS("/Users/Franciscorowe/Dropbox/Francisco/Research/in_progress/mig_covid_spain/data/matrix.rds")
summary(df)
ggplot(data = filter(df, Year=="2020")) +
geom_density(alpha=0.8, colour="black", fill="lightblue", aes(x = Tasa)) +
theme_minimal()
ggplot(data = filter(df, Year=="2020")) +
geom_density(alpha=0.8, colour="black", fill="lightblue", aes(x = Tasa)) +
theme_minimal()
rdf<- filter(df, Year=="2020" & pop > 50000)
ggplot(data = rdf,
mapping = aes(x = reorder(To, pop), y = From, fill = Tasa)) +
geom_tile() +
scale_fill_viridis(name="migration rate", option ="plasma", begin = 0, end = 1, direction = 1) +
theme_minimal() +
labs(title= paste(" "), x="Destination", y="Origin") +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.y=element_blank())
rdf<- filter(df, Year=="2020" & Tasa > 0)
ggplot(data = rdf,
mapping = aes(x = reorder(To, pop), y = From, fill = Tasa)) +
geom_tile() +
scale_fill_viridis(name="migration rate", option ="plasma", begin = 0, end = 1, direction = 1) +
theme_minimal() +
labs(title= paste(" "), x="Destination", y="Origin") +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.y=element_blank())
rdf<- filter(df, Year=="2020" & Tasa > 5)
ggplot(data = rdf,
mapping = aes(x = reorder(To, pop), y = From, fill = Tasa)) +
geom_tile() +
scale_fill_viridis(name="migration rate", option ="plasma", begin = 0, end = 1, direction = 1) +
theme_minimal() +
labs(title= paste(" "), x="Destination", y="Origin") +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.y=element_blank())
rdf<- filter(df, Year=="2020" & Tasa > 0)
ggplot(data = rdf,
mapping = aes(x = reorder(To, pop), y = From, fill = Tasa)) +
geom_tile() +
scale_fill_viridis(name="migration rate", option ="plasma", begin = 0, end = 1, direction = 1) +
theme_minimal() +
labs(title= paste(" "), x="Destination", y="Origin") +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.y=element_blank())
ggplot(data = rdf,
mapping = aes(x = reorder(To, pop), y = From, fill = log10(Tasa) )) +
geom_tile() +
scale_fill_viridis(name="migration rate", option ="plasma", begin = 0, end = 1, direction = 1) +
theme_minimal() +
labs(title= paste(" "), x="Destination", y="Origin") +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.y=element_blank())
ggplot(data = filter(df, Year=="2020")) +
geom_density(alpha=0.8, colour="black", fill="lightblue", aes(x = (Tasa > 0) )) +
theme_minimal()
ggplot(data = rdf,
mapping = aes(x = reorder(To, pop), y = From, fill = Tasa)) +
geom_tile() +
scale_fill_viridis(name="migration rate", option ="plasma", begin = 0, end = 1, direction = 1) +
theme_minimal() +
labs(title= paste(" "), x="Destination", y="Origin") +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.y=element_blank())
install_bundle_py()
install_bundle_py(method = "auto", conda = "auto")
install_bundle_py(method = "auto", conda = "auto")
library(edgebundle)
install_bundle_py(method = "auto", conda = "auto")
#remotes::install_github(“glmmTMB/glmmTMB/glmmTMB”)
#install.packages(“viridisLite”)
#install.packages(“multidplyr”)
#install.packages(“speedglm”)
#install.packages(“gpuGlm”)
#data wrangling
library(multidplyr)
library(tidyverse)
library(dplyr)
# estimating mixed effects models
library(lme4)
library(merTools)
library(glmmTMB)
library(nlme)
library(speedglm)
#remotes::install_github(“glmmTMB/glmmTMB/glmmTMB”)
#install.packages(“viridisLite”)
#install.packages(“multidplyr”)
#install.packages(“speedglm”)
#install.packages(“gpuGlm”)
#data wrangling
library(multidplyr)
library(tidyverse)
library(dplyr)
# estimating mixed effects models
library(lme4)
library(merTools)
library(glmmTMB)
library(nlme)
#library(speedglm)
#library(gpuGlm)
# data visualisation
library(viridis)
library(viridisLite)
# reporting regression results
library(broom.mixed)
library(gtsummary)
library(sjPlot)
rm(list=ls())
cluster <- new_cluster(12)
df <- readRDS("/Volumes/ITINERANT/pre-processed-movements/movements.rds")
rm(list=ls())
cluster <- new_cluster(2)
df <- readRDS("/Volumes/ITINERANT/pre-processed-movements/movements.rds")
rm(list=ls())
cluster <- new_cluster(2)
df <- readRDS("/Volumes/ITINERANT/pre-processed-movements/movements.rds")
#remotes::install_github(“glmmTMB/glmmTMB/glmmTMB”)
#install.packages(“viridisLite”)
#install.packages(“multidplyr”)
#install.packages(“speedglm”)
#install.packages(“gpuGlm”)
#data wrangling
library(multidplyr)
library(tidyverse)
library(dplyr)
# estimating mixed effects models
library(lme4)
library(merTools)
library(glmmTMB)
library(nlme)
# data visualisation
library(viridis)
library(viridisLite)
# reporting regression results
library(broom.mixed)
library(gtsummary)
library(sjPlot)
rm(list=ls())
cluster <- new_cluster(2)
df <- readRDS("/Volumes/ITINERANT/pre-processed-movements/movements.rds")
rm(list=ls())
cluster <- new_cluster(2)
df <- readRDS("/Volumes/ITINERANT/pre-processed-movements/movements.rds")
#data wrangling
library(multidplyr)
library(tidyverse)
library(dplyr)
# estimating mixed effects models
library(lme4)
library(merTools)
library(glmmTMB)
library(nlme)
library(rstanarm)
# data visualisation
library(viridis)
library(viridisLite)
# reporting regression results
library(broom)
library(broom.mixed)
library(gtsummary)
library(sjPlot)
?qmap
?sim
?sim
library(arm)
?sim
# Linear regression
x1 <- y123.dat[,2]
y1 <- y123.dat[,1]
M1 <- lm (y1 ~ x1)
#Examples of "sim"
set.seed (1)
J <- 15
n <- J*(J+1)/2
group <- rep (1:J, 1:J)
mu.a <- 5
sigma.a <- 2
a <- rnorm (J, mu.a, sigma.a)
b <- -3
x <- rnorm (n, 2, 1)
sigma.y <- 6
y <- rnorm (n, a[group] + b*x, sigma.y)
u <- runif (J, 0, 3)
y123.dat <- cbind (y, x, group)
# Linear regression
x1 <- y123.dat[,2]
y1 <- y123.dat[,1]
M1 <- lm (y1 ~ x1)
display(M1)
y123.dat
M1.sim <- sim(M1)
View(M1.sim)
M1.sim
?lm
?glm
utils::data(anorexia, package = "MASS")
force(anorexia)
set("/Users/franciscorowe/Dropbox/Francisco/uol/teaching/envs453/202122/san/data")
setwd("/Users/franciscorowe/Dropbox/Francisco/uol/teaching/envs453/202122/san/data")
ls
getwd
getwd()
db <- st_read('data/abb_sd/regression_db.geojson')
db <- st_read('abb_sd/regression_db.geojson')
library(sfheaders)
library(sf)
db <- st_read('abb_sd/regression_db.geojson')
m2 <- lm(
'log_price ~ neighborhood + accommodates - 1',
db
)
summary(m2)
m3 <- lm(
'log_price ~ neighborhood + accommodates',
db
)
summary(m3)
4.081374 - -0.209940
4.081374 + -0.209940
